@import "~m-base/base/mixins";
@import "~m-base/base/variables";

@cls: slider;
.@{cls} {
  position: relative;
  width: 100%;

  > .swipe-area {
    width: 100%;
    height: 100%;
    position: relative;
    overflow: hidden;
    margin: auto;
    z-index: 0;
  }
  .@{cls}-container {
    width: 100%;
    height: 100%;
    position: relative;
    z-index: 1;
    .transform(translate3d(0, 0, 0));

    > .frame {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: hidden;
      z-index: 0;

      .flexbox();
      .align-items(center);
      .justify-content(center);

      > .image-group {
        height: 100%;
        .flex-grow(0);
        .flexbox();
        .align-items(center);
        .justify-content(center);

        .dp2rem(padding-left, @S2 / 2);
        .dp2rem(padding-right, @S2 / 2);
      }

    }

    > .frame-group {
      .justify-content(flex-start);
      overflow: hidden;
      .dp2rem(padding, @S3);

    }

    .image-box {
      width: 100%;
      height: 100%;
      overflow: hidden;

      .flexbox();
      .align-items(center);
      .justify-content(center);
    }

    .@{cls}-img {
      width: 100%;
    }
  }

  .indicator {
    position: absolute;
    .dp2rem(bottom, @S3);
    left: 0;
    right: 0;
    margin: 0;
    .padding(@S3);
    .line-height(@S2);
    z-index: 1;
    white-space: nowrap;
    letter-spacing: 0;
    text-align: center;

    .dot {
      display: inline-block;
      .width(@S2);
      .height(@S2);
      .dp2rem(margin-right, @S1);
      .border-radius(50%);
      .dp2rem(border-width, 1);
      background-color: @B1_1;
      border-color: @N1_6;
      border-style: solid;

      &:last-child {
        margin-right: 0;
      }
    }

    .current {
      background-color: @N1_1;
    }
  }

  .indicator-separate {
    position: static;
    .padding(0);
    .padding-bottom(@S3);
  }

  //露头类型

  &.@{cls}-narrow {

  }

  //分组
  &.@{cls}-group {
    .@{cls}-container {
      > .frame-group {
        .dp2rem(padding-left, @S3 - @S2 / 2);
        .dp2rem(padding-right, @S3 - @S2 / 2);
      }
    }
  }

  //露头多图类型
  &.@{cls}-narrow.@{cls}-group {

    .@{cls}-container {
      width: auto;

      > .frame.frame-group {
        padding-left: 0;
        padding-right: 0;

        > .image-group {
          .dp2rem(padding-left, @S2 / 2);
          .dp2rem(padding-right, @S2 / 2);
        }

        //非循环类型, 首位frame添加padding
        &:first-child {
          .dp2rem(padding-left, @S3 - @S2 / 2);
        }

        &:last-child {
          .dp2rem(padding-right, @S3 - @S2 / 2);
        }

      }
    }
  }

  //循环
  &.@{cls}-loop.@{cls}-narrow {
    .@{cls}-container {

      //循环类型的分组的frame中, 调整首位frame的左右padding
      > .frame.frame-group {
        &:first-child {
          padding-left: 0;
        }

        &:last-child {
          padding-right: 0;
        }
      }
    }
  }

  //组合型
  &.@{cls}-custom {
    .@{cls}-container {
      .custom-frame {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: 0;
      }
    }
  }

  //跟随型
  &.@{cls}-free {
    .@{cls}-container {
      width: auto;

      > .frame.frame-group {
        padding-left: 0;
        padding-right: 0;

        //非循环, 首位frame添加padding
        &:first-child {
          .dp2rem(padding-left, @S2/2);
        }

        &:last-child {
          .dp2rem(padding-right, @S2/2);
        }

      }
    }
  }
}
